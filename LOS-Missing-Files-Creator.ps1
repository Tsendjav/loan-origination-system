# ================================================================
# üè¶ LOS –î—É—Ç—É—É –§–∞–π–ª—É—É–¥ “Æ“Ø—Å–≥—ç–≥—á - Template Generator
# LOS-Missing-Files-Creator.ps1
# ================================================================

param(
    [Parameter(Mandatory=$false)]
    [string]$Week = "",
    
    [Parameter(Mandatory=$false)]
    [switch]$CreateAll = $false,
    
    [Parameter(Mandatory=$false)]
    [switch]$DryRun = $false,
    
    [Parameter(Mandatory=$false)]
    [string]$LogFile = "los-file-creation.log"
)

# UTF-8 –¥—ç–º–∂–ª—ç–≥
[Console]::OutputEncoding = [System.Text.Encoding]::UTF8

function Write-ColoredText {
    param($Text, $Color = "White")
    Write-Host $Text -ForegroundColor $Color
}

function Write-Log {
    param($Message)
    if ($LogFile) {
        Add-Content -Path $LogFile -Value "$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss'): $Message" -Encoding UTF8
    }
}

# Template —Ñ–∞–π–ª—É—É–¥
$templates = @{
    "backend/pom.xml" = @'
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.1</version>
        <relativePath/>
    </parent>
    
    <groupId>com.los</groupId>
    <artifactId>loan-origination-system</artifactId>
    <version>1.0.0</version>
    <name>Loan Origination System</name>
    <description>Comprehensive Loan Origination System</description>
    
    <properties>
        <java.version>17</java.version>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
    </properties>
    
    <dependencies>
        <!-- Spring Boot Starters -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        
        <!-- Database -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>
        
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        
        <!-- JWT -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-api</artifactId>
            <version>0.11.5</version>
        </dependency>
        
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
            <version>0.11.5</version>
            <scope>runtime</scope>
        </dependency>
        
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-jackson</artifactId>
            <version>0.11.5</version>
            <scope>runtime</scope>
        </dependency>
        
        <!-- Documentation -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.2.0</version>
        </dependency>
        
        <!-- Testing -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
'@

    "backend/src/main/java/com/los/LosApplication.java" = @'
package com.los;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

/**
 * Loan Origination System - –ó—ç—ç–ª–∏–π–Ω –°–∞–Ω–∞–ª ”®–≥”©—Ö –°–∏—Å—Ç–µ–º
 * 
 * @author LOS Development Team
 * @version 1.0.0
 */
@SpringBootApplication
public class LosApplication {

    public static void main(String[] args) {
        SpringApplication.run(LosApplication.class, args);
        System.out.println("\nüè¶ LOS - Loan Origination System —ç—Ö–ª—ç–∂ –±–∞–π–Ω–∞...");
        System.out.println("üåê Backend: http://localhost:8080/los");
        System.out.println("üìñ API Docs: http://localhost:8080/los/swagger-ui.html");
        System.out.println("üóÑÔ∏è H2 Console: http://localhost:8080/los/h2-console");
    }
}
'@

    "backend/src/main/java/com/los/common/BaseEntity.java" = @'
package com.los.common;

import jakarta.persistence.*;
import java.time.LocalDateTime;

/**
 * –ë“Ø—Ö Entity-“Ø“Ø–¥–∏–π–Ω —Å—É—É—Ä—å –∫–ª–∞—Å—Å
 * “Æ“Ø—Å–≥—ç—Å—ç–Ω –æ–≥–Ω–æ–æ, —à–∏–Ω—ç—á–∏–ª—Å—ç–Ω –æ–≥–Ω–æ–æ –∑—ç—Ä—ç–≥ –µ—Ä”©–Ω—Ö–∏–π —Ç–∞–ª–±–∞—Ä—É—É–¥—ã–≥ –∞–≥—É—É–ª–Ω–∞
 */
@MappedSuperclass
public abstract class BaseEntity {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column(name = "created_at", nullable = false, updatable = false)
    private LocalDateTime createdAt;

    @Column(name = "updated_at")
    private LocalDateTime updatedAt;

    @Column(name = "created_by")
    private String createdBy;

    @Column(name = "updated_by")
    private String updatedBy;

    @PrePersist
    protected void onCreate() {
        createdAt = LocalDateTime.now();
        updatedAt = LocalDateTime.now();
    }

    @PreUpdate
    protected void onUpdate() {
        updatedAt = LocalDateTime.now();
    }

    // Getters and Setters
    public Long getId() { return id; }
    public void setId(Long id) { this.id = id; }

    public LocalDateTime getCreatedAt() { return createdAt; }
    public void setCreatedAt(LocalDateTime createdAt) { this.createdAt = createdAt; }

    public LocalDateTime getUpdatedAt() { return updatedAt; }
    public void setUpdatedAt(LocalDateTime updatedAt) { this.updatedAt = updatedAt; }

    public String getCreatedBy() { return createdBy; }
    public void setCreatedBy(String createdBy) { this.createdBy = createdBy; }

    public String getUpdatedBy() { return updatedBy; }
    public void setUpdatedBy(String updatedBy) { this.updatedBy = updatedBy; }
}
'@

    "backend/src/main/java/com/los/entity/Customer.java" = @'
package com.los.entity;

import com.los.common.BaseEntity;
import jakarta.persistence.*;
import jakarta.validation.constraints.*;

/**
 * –•–∞—Ä–∏–ª—Ü–∞–≥—á–∏–π–Ω –º—ç–¥—ç—ç–ª—ç–ª
 */
@Entity
@Table(name = "customers")
public class Customer extends BaseEntity {

    @Enumerated(EnumType.STRING)
    @Column(name = "customer_type", nullable = false)
    private CustomerType customerType;

    @NotBlank(message = "–û–≤–æ–≥ –Ω—ç—Ä –∑–∞–∞–≤–∞–ª –æ—Ä—É—É–ª–Ω–∞ —É—É")
    @Size(max = 50, message = "–û–≤–æ–≥ –Ω—ç—Ä 50 —Ç—ç–º–¥—ç–≥—Ç—ç—ç—Å –∏—Ö–≥“Ø–π –±–∞–π–Ω–∞")
    @Column(name = "first_name", nullable = false, length = 50)
    private String firstName;

    @NotBlank(message = "–ù—ç—Ä –∑–∞–∞–≤–∞–ª –æ—Ä—É—É–ª–Ω–∞ —É—É")
    @Size(max = 50, message = "–ù—ç—Ä 50 —Ç—ç–º–¥—ç–≥—Ç—ç—ç—Å –∏—Ö–≥“Ø–π –±–∞–π–Ω–∞")
    @Column(name = "last_name", nullable = false, length = 50)
    private String lastName;

    @NotBlank(message = "–†–µ–≥–∏—Å—Ç—Ä–∏–π–Ω –¥—É–≥–∞–∞—Ä –∑–∞–∞–≤–∞–ª –æ—Ä—É—É–ª–Ω–∞ —É—É")
    @Pattern(regexp = "^[–ê-–Ø]{2}\\d{8}$", message = "–†–µ–≥–∏—Å—Ç—Ä–∏–π–Ω –¥—É–≥–∞–∞—Ä –±—É—Ä—É—É –±–∞–π–Ω–∞")
    @Column(name = "register_number", unique = true, nullable = false, length = 10)
    private String registerNumber;

    @Pattern(regexp = "^\\+976[0-9]{8}$", message = "–£—Ç–∞—Å–Ω—ã –¥—É–≥–∞–∞—Ä –±—É—Ä—É—É –±–∞–π–Ω–∞")
    @Column(name = "phone", length = 15)
    private String phone;

    @Email(message = "–ò-–º—ç–π–ª —Ö–∞—è–≥ –±—É—Ä—É—É –±–∞–π–Ω–∞")
    @Column(name = "email", length = 100)
    private String email;

    @Column(name = "address", length = 255)
    private String address;

    @Column(name = "monthly_income")
    private Double monthlyIncome;

    @Enumerated(EnumType.STRING)
    @Column(name = "status")
    private CustomerStatus status = CustomerStatus.ACTIVE;

    public enum CustomerType {
        INDIVIDUAL,    // –•—É–≤—å —Ö“Ø–Ω
        BUSINESS      // –•—É—É–ª–∏–π–Ω —ç—Ç–≥—ç—ç–¥
    }

    public enum CustomerStatus {
        ACTIVE,       // –ò–¥—ç–≤—Ö—Ç—ç–π
        INACTIVE,     // –ò–¥—ç–≤—Ö–≥“Ø–π
        BLOCKED       // –ë–ª–æ–∫–ª–æ–≥–¥—Å–æ–Ω
    }

    // Getters and Setters
    public CustomerType getCustomerType() { return customerType; }
    public void setCustomerType(CustomerType customerType) { this.customerType = customerType; }

    public String getFirstName() { return firstName; }
    public void setFirstName(String firstName) { this.firstName = firstName; }

    public String getLastName() { return lastName; }
    public void setLastName(String lastName) { this.lastName = lastName; }

    public String getRegisterNumber() { return registerNumber; }
    public void setRegisterNumber(String registerNumber) { this.registerNumber = registerNumber; }

    public String getPhone() { return phone; }
    public void setPhone(String phone) { this.phone = phone; }

    public String getEmail() { return email; }
    public void setEmail(String email) { this.email = email; }

    public String getAddress() { return address; }
    public void setAddress(String address) { this.address = address; }

    public Double getMonthlyIncome() { return monthlyIncome; }
    public void setMonthlyIncome(Double monthlyIncome) { this.monthlyIncome = monthlyIncome; }

    public CustomerStatus getStatus() { return status; }
    public void setStatus(CustomerStatus status) { this.status = status; }

    public String getFullName() {
        return firstName + " " + lastName;
    }
}
'@

    "backend/src/main/resources/application.yml" = @'
# LOS - Loan Origination System Configuration
spring:
  application:
    name: loan-origination-system
  
  # Database Configuration
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: password
  
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.H2Dialect
  
  # Security Configuration
  security:
    user:
      name: admin
      password: admin123
      roles: ADMIN
  
  # Server Configuration
server:
  port: 8080
  servlet:
    context-path: /los

# JWT Configuration
jwt:
  secret: mySecretKey
  expiration: 7200 # 2 hours in seconds

# Logging Configuration
logging:
  level:
    com.los: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/los-application.log

# Management Endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always

# Application Information
info:
  app:
    name: LOS - Loan Origination System
    description: Comprehensive Loan Origination System
    version: 1.0.0
    developer: LOS Development Team
'@

    "backend/src/main/resources/data.sql" = @'
-- LOS - Loan Origination System - –ê–Ω—Ö–Ω—ã ”©–≥”©–≥–¥”©–ª

-- –•—ç—Ä—ç–≥–ª—ç–≥—á–¥–∏–π–Ω –¥“Ø—Ä“Ø“Ø–¥ (Roles)
INSERT INTO roles (id, name, description, created_at, updated_at) VALUES
(1, 'ADMIN', '–°–∏—Å—Ç–µ–º–∏–π–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', NOW(), NOW()),
(2, 'LOAN_OFFICER', '–ó—ç—ç–ª–∏–π–Ω –∞–∂–∏–ª—Ç–∞–Ω', NOW(), NOW()),
(3, 'MANAGER', '–ú–µ–Ω–µ–∂–µ—Ä', NOW(), NOW()),
(4, 'CUSTOMER', '–•–∞—Ä–∏–ª—Ü–∞–≥—á', NOW(), NOW());

-- –•—ç—Ä—ç–≥–ª—ç–≥—á–∏–¥ (Users)
INSERT INTO users (id, username, password, email, first_name, last_name, enabled, created_at, updated_at) VALUES
(1, 'admin', '$2a$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2uheWG/igi.', 'admin@los.mn', '–ê–¥–º–∏–Ω', '–•—ç—Ä—ç–≥–ª—ç–≥—á', true, NOW(), NOW()),
(2, 'loan_officer', '$2a$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2uheWG/igi.', 'loan@los.mn', '–ó—ç—ç–ª–∏–π–Ω', '–ê–∂–∏–ª—Ç–∞–Ω', true, NOW(), NOW()),
(3, 'manager', '$2a$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2uheWG/igi.', 'manager@los.mn', '–ú–µ–Ω–µ–∂–µ—Ä', '–•—ç—Ä—ç–≥–ª—ç–≥—á', true, NOW(), NOW());

-- –•—ç—Ä—ç–≥–ª—ç–≥—á–∏–¥ –±–æ–ª–æ–Ω –¥“Ø—Ä“Ø“Ø–¥–∏–π–Ω —Ö–æ–ª–±–æ–ª—Ç
INSERT INTO user_roles (user_id, role_id) VALUES
(1, 1), -- admin -> ADMIN
(2, 2), -- loan_officer -> LOAN_OFFICER  
(3, 3); -- manager -> MANAGER

-- –ñ–∏—à—ç—ç —Ö–∞—Ä–∏–ª—Ü–∞–≥—á–∏–¥
INSERT INTO customers (id, customer_type, first_name, last_name, register_number, phone, email, address, monthly_income, status, created_at, updated_at) VALUES
(1, 'INDIVIDUAL', '–ë–∞—Ç', '–ë–æ–ª–¥', '–£–ë12345678', '+97611111111', 'bat.bold@email.com', '–£–ª–∞–∞–Ω–±–∞–∞—Ç–∞—Ä —Ö–æ—Ç, –°–ë–î, 1-—Ä —Ö–æ—Ä–æ–æ', 1500000.00, 'ACTIVE', NOW(), NOW()),
(2, 'INDIVIDUAL', '–°“Ø—Ö', '–¶—ç—Ü—ç–≥', '–£–ë87654321', '+97622222222', 'sukh.tsetseg@email.com', '–£–ª–∞–∞–Ω–±–∞–∞—Ç–∞—Ä —Ö–æ—Ç, –•–£–î, 5-—Ä —Ö–æ—Ä–æ–æ', 2000000.00, 'ACTIVE', NOW(), NOW()),
(3, 'BUSINESS', '–¢–¢–î', '–ö–æ–º–ø–∞–Ω–∏', '–£–ë99999999', '+97633333333', 'info@ttd.mn', '–£–ª–∞–∞–Ω–±–∞–∞—Ç–∞—Ä —Ö–æ—Ç, –ß–î, 10-—Ä —Ö–æ—Ä–æ–æ', 5000000.00, 'ACTIVE', NOW(), NOW());

-- –ó—ç—ç–ª–∏–π–Ω —Ç”©—Ä–ª“Ø“Ø–¥
INSERT INTO loan_types (id, name, description, min_amount, max_amount, min_term_months, max_term_months, interest_rate, created_at, updated_at) VALUES
(1, 'CONSUMER', '–•—ç—Ä—ç–≥–ª—ç—ç–Ω–∏–π –∑—ç—ç–ª', 100000, 5000000, 6, 60, 12.50, NOW(), NOW()),
(2, 'MORTGAGE', '–û—Ä–æ–Ω —Å—É—É—Ü–Ω—ã –∑—ç—ç–ª', 10000000, 500000000, 120, 360, 9.50, NOW(), NOW()),
(3, 'BUSINESS', '–ë–∏–∑–Ω–µ—Å–∏–π–Ω –∑—ç—ç–ª', 500000, 100000000, 12, 120, 15.00, NOW(), NOW()),
(4, 'AUTO', '–ê–≤—Ç–æ–º–∞—à–∏–Ω—ã –∑—ç—ç–ª', 1000000, 50000000, 12, 84, 11.00, NOW(), NOW());

-- –ñ–∏—à—ç—ç –∑—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç“Ø“Ø–¥
INSERT INTO loan_applications (id, customer_id, loan_type, requested_amount, requested_term_months, declared_income, purpose, status, created_at, updated_at) VALUES
(1, 1, 'CONSUMER', 1000000, 24, 1500000, '–ì—ç—Ä –∞—Ö—É–π–Ω –∑–∞—Ä–¥–∞–ª', 'PENDING', NOW(), NOW()),
(2, 2, 'AUTO', 15000000, 48, 2000000, '–ê–≤—Ç–æ–º–∞—à–∏–Ω —Ö—É–¥–∞–ª–¥–∞–Ω –∞–≤–∞—Ö', 'APPROVED', NOW(), NOW()),
(3, 3, 'BUSINESS', 25000000, 36, 5000000, '–ë–∏–∑–Ω–µ—Å ”©—Ä–≥”©—Ç–≥”©—Ö', 'IN_REVIEW', NOW(), NOW());

-- –ñ–∏—à—ç—ç –±–∞—Ä–∏–º—Ç –±–∏—á–≥“Ø“Ø–¥
INSERT INTO documents (id, loan_application_id, document_type, file_name, file_path, file_size, status, created_at, updated_at) VALUES
(1, 1, 'ID_CARD', 'irgens_bichig_1.pdf', '/documents/1/irgens_bichig_1.pdf', 1024000, 'VERIFIED', NOW(), NOW()),
(2, 1, 'INCOME_CERTIFICATE', 'orlogiin_gerchilgee_1.pdf', '/documents/1/orlogiin_gerchilgee_1.pdf', 2048000, 'PENDING', NOW(), NOW()),
(3, 2, 'ID_CARD', 'irgens_bichig_2.pdf', '/documents/2/irgens_bichig_2.pdf', 1536000, 'VERIFIED', NOW(), NOW());

-- –°–∏—Å—Ç–µ–º–∏–π–Ω —Ç–æ—Ö–∏—Ä–≥–æ–æ
INSERT INTO system_settings (id, setting_key, setting_value, description, created_at, updated_at) VALUES
(1, 'MAX_LOAN_AMOUNT', '100000000', '–•–∞–º–≥–∏–π–Ω –∏—Ö –∑—ç—ç–ª–∏–π–Ω —Ö—ç–º–∂—ç—ç', NOW(), NOW()),
(2, 'MIN_CREDIT_SCORE', '600', '–•–∞–º–≥–∏–π–Ω –±–∞–≥–∞ –∑—ç—ç–ª–∏–π–Ω “Ø–Ω—ç–ª–≥—ç—ç', NOW(), NOW()),
(3, 'DEFAULT_INTEREST_RATE', '12.0', '–°—Ç–∞–Ω–¥–∞—Ä—Ç —Ö“Ø“Ø–≥–∏–π–Ω —Ö—É–≤—å', NOW(), NOW()),
(4, 'SYSTEM_EMAIL', 'system@los.mn', '–°–∏—Å—Ç–µ–º–∏–π–Ω –∏-–º—ç–π–ª —Ö–∞—è–≥', NOW(), NOW());
'@

    "frontend/package.json" = @'
{
  "name": "los-frontend",
  "version": "1.0.0",
  "description": "LOS - Loan Origination System Frontend",
  "type": "module",
  "scripts": {
    "dev": "vite --port 3001",
    "build": "tsc && vite build",
    "lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview",
    "test": "vitest",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest --coverage"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.8.1",
    "axios": "^1.3.4",
    "antd": "^5.2.3",
    "@ant-design/icons": "^5.0.1",
    "dayjs": "^1.11.7",
    "recharts": "^2.5.0",
    "react-query": "^3.39.3",
    "zustand": "^4.3.6",
    "react-hook-form": "^7.43.5",
    "@hookform/resolvers": "^2.9.11",
    "yup": "^1.0.2"
  },
  "devDependencies": {
    "@types/react": "^18.0.28",
    "@types/react-dom": "^18.0.11",
    "@typescript-eslint/eslint-plugin": "^5.57.1",
    "@typescript-eslint/parser": "^5.57.1",
    "@vitejs/plugin-react": "^4.0.0",
    "eslint": "^8.38.0",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.3.4",
    "typescript": "^5.0.2",
    "vite": "^4.3.2",
    "vitest": "^0.29.8",
    "@testing-library/react": "^14.0.0",
    "@testing-library/jest-dom": "^5.16.5",
    "@testing-library/user-event": "^14.4.3",
    "jsdom": "^21.1.1"
  },
  "keywords": [
    "loan-origination-system",
    "los",
    "react",
    "typescript",
    "vite",
    "banking",
    "finance"
  ],
  "author": "LOS Development Team",
  "license": "MIT"
}
'@

    "frontend/src/main.tsx" = @'
import React from 'react'
import ReactDOM from 'react-dom/client'
import { BrowserRouter } from 'react-router-dom'
import { QueryClient, QueryClientProvider } from 'react-query'
import { ConfigProvider } from 'antd'
import mnMN from 'antd/locale/mn_MN'
import App from './App.tsx'
import './styles/index.css'

// Create a client
const queryClient = new QueryClient({
  defaultOptions: {
    queries: {
      refetchOnWindowFocus: false,
      retry: 1,
      staleTime: 5 * 60 * 1000, // 5 minutes
    },
  },
})

// Ant Design theme configuration
const theme = {
  token: {
    colorPrimary: '#1890ff',
    borderRadius: 6,
    colorSuccess: '#52c41a',
    colorWarning: '#faad14',
    colorError: '#ff4d4f',
  },
  components: {
    Layout: {
      headerBg: '#001529',
      siderBg: '#001529',
    },
    Menu: {
      darkItemBg: '#001529',
      darkSubMenuItemBg: '#000c17',
    },
  },
}

ReactDOM.createRoot(document.getElementById('root')!).render(
  <React.StrictMode>
    <QueryClientProvider client={queryClient}>
      <ConfigProvider locale={mnMN} theme={theme}>
        <BrowserRouter>
          <App />
        </BrowserRouter>
      </ConfigProvider>
    </QueryClientProvider>
  </React.StrictMode>,
)
'@

    "frontend/src/App.tsx" = @'
import React from 'react'
import { Routes, Route, Navigate } from 'react-router-dom'
import { Layout } from 'antd'
import { AuthProvider } from './contexts/AuthContext'
import MainLayout from './components/layout/MainLayout'
import LoginPage from './pages/LoginPage'
import DashboardPage from './pages/DashboardPage'
import CustomerPage from './pages/CustomerPage'
import LoanApplicationPage from './pages/LoanApplicationPage'
import PrivateRoute from './security/PrivateRoute'
import './styles/index.css'

const { Content } = Layout

const App: React.FC = () => {
  return (
    <AuthProvider>
      <Layout style={{ minHeight: '100vh' }}>
        <Routes>
          {/* Public routes */}
          <Route path="/login" element={<LoginPage />} />
          
          {/* Private routes */}
          <Route path="/" element={
            <PrivateRoute>
              <MainLayout />
            </PrivateRoute>
          }>
            <Route index element={<Navigate to="/dashboard" replace />} />
            <Route path="dashboard" element={<DashboardPage />} />
            <Route path="customers" element={<CustomerPage />} />
            <Route path="loan-applications" element={<LoanApplicationPage />} />
          </Route>
          
          {/* Catch all route */}
          <Route path="*" element={<Navigate to="/dashboard" replace />} />
        </Routes>
      </Layout>
    </AuthProvider>
  )
}

export default App
'@

    "README.md" = @'
# üè¶ LOS - Loan Origination System

–ó—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç–∏–π–Ω —Ü–æ–≥—Ü —Å–∏—Å—Ç–µ–º - Comprehensive Loan Origination System

## üìã –¢–æ–π–º (Overview)

LOS –Ω—å –±–∞–Ω–∫, —Å–∞–Ω—Ö“Ø“Ø–≥–∏–π–Ω –±–∞–π–≥—É—É–ª–ª–∞–≥—ã–Ω –∑—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç–∏–π–≥ —ç—Ö–Ω—ç—ç—Å –Ω—å –¥—É—É—Å—Ç–∞–ª —É–¥–∏—Ä–¥–∞—Ö —Ü–æ–≥—Ü —Å–∏—Å—Ç–µ–º —é–º. –≠–Ω—ç —Å–∏—Å—Ç–µ–º –Ω—å –∑—ç—ç–ª –∞–≤–∞–≥—á–∏–π–Ω –º—ç–¥—ç—ç–ª—ç–ª, –±–∞—Ä–∏–º—Ç –±–∏—á–∏–≥, –∑—ç—ç–ª–∏–π–Ω “Ø–Ω—ç–ª–≥—ç—ç, —à–∏–π–¥–≤—ç—Ä –≥–∞—Ä–≥–∞—Ö –∑—ç—Ä—ç–≥ –±“Ø—Ö “Ø–π–ª —è–≤—Ü—ã–≥ –∞–≤—Ç–æ–º–∞—Ç–∂—É—É–ª—Å–∞–Ω.

## üåü –ì–æ–ª –æ–Ω—Ü–ª–æ–≥—É—É–¥

- üë• **–•–∞—Ä–∏–ª—Ü–∞–≥—á–∏–π–Ω —É–¥–∏—Ä–¥–ª–∞–≥–∞** - KYC, –º—ç–¥—ç—ç–ª–ª–∏–π–Ω –±–∞—Ç–∞–ª–≥–∞–∞–∂—É—É–ª–∞–ª—Ç
- üìÑ **–ó—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç** - –û–ª–æ–Ω —Ç”©—Ä–ª–∏–π–Ω –∑—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç “Ø“Ø—Å–≥—ç—Ö, —É–¥–∏—Ä–¥–∞—Ö  
- üìã **–ë–∞—Ä–∏–º—Ç –±–∏—á–∏–≥** - –ê–≤—Ç–æ–º–∞—Ç OCR, –±–∞—Ç–∞–ª–≥–∞–∞–∂—É—É–ª–∞–ª—Ç
- ‚ö° **–ê–≤—Ç–æ–º–∞—Ç —à–∏–π–¥–≤—ç—Ä** - Credit scoring, risk assessment
- üîÑ **Workflow** - BPMN-–¥ —Ç—É–ª–≥—É—É—Ä–ª–∞—Å–∞–Ω “Ø–π–ª —è–≤—Ü—ã–Ω —É–¥–∏—Ä–¥–ª–∞–≥–∞
- üîó **–ì–∞–¥–∞–∞–¥ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏** - –ö–¢–°, –ù–î–ï–ì, –±–∞–Ω–∫–Ω—ã —Å–∏—Å—Ç–µ–º—Ç—ç–π —Ö–æ–ª–±–æ–ª—Ç
- üìä **–¢–∞–π–ª–∞–Ω** - Real-time analytics, dashboard
- üîê **–ê—é—É–ª–≥“Ø–π –±–∞–π–¥–∞–ª** - JWT, RBAC, audit logging

## üöÄ –•—É—Ä–¥–∞–Ω —ç—Ö–ª—ç–ª (Quick Start)

### –®–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π –∑“Ø–π–ª—Å

- **Java 17+**
- **Node.js 18+** 
- **Maven 3.6+**

### 1Ô∏è‚É£ Repository —Ç–∞—Ç–∞—Ö

```bash
git clone https://github.com/your-username/loan-origination-system.git
cd loan-origination-system
```

### 2Ô∏è‚É£ Backend —ç—Ö–ª“Ø“Ø–ª—ç—Ö

```bash
cd backend
./mvnw spring-boot:run
```

### 3Ô∏è‚É£ Frontend —ç—Ö–ª“Ø“Ø–ª—ç—Ö

```bash
cd frontend
npm install
npm run dev
```

### 4Ô∏è‚É£ –°–∏—Å—Ç–µ–º —Ä“Ø“Ø –Ω—ç–≤—Ç—Ä—ç—Ö

- **Backend**: http://localhost:8080/los
- **Frontend**: http://localhost:3001
- **API Docs**: http://localhost:8080/los/swagger-ui.html
- **H2 Console**: http://localhost:8080/los/h2-console

#### –ù—ç–≤—Ç—Ä—ç—Ö –º—ç–¥—ç—ç–ª—ç–ª:
- **–ê–¥–º–∏–Ω**: admin / admin123
- **–ó—ç—ç–ª–∏–π–Ω –∞–∂–∏–ª—Ç–∞–Ω**: loan_officer / loan123
- **–ú–µ–Ω–µ–∂–µ—Ä**: manager / manager123

## üèóÔ∏è –¢–µ—Ö–Ω–æ–ª–æ–≥–∏ —Å—Ç–µ–∫

### Backend
- Spring Boot 3.2+
- Spring Security + JWT
- Spring Data JPA
- H2 Database (dev) / PostgreSQL (prod)
- Maven

### Frontend  
- React 18 + TypeScript
- Ant Design
- React Router
- React Query
- Vite

## üìÅ –¢”©—Å–ª–∏–π–Ω –±“Ø—Ç—ç—Ü

```
loan-origination-system/
‚îú‚îÄ‚îÄ backend/
‚îÇ   ‚îú‚îÄ‚îÄ src/main/java/com/los/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ controller/     # REST API controllers
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ service/        # Business logic
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ entity/         # JPA entities
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ repository/     # Data access
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ config/         # Configuration
‚îÇ   ‚îî‚îÄ‚îÄ src/main/resources/
‚îú‚îÄ‚îÄ frontend/
‚îÇ   ‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ components/     # React components
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ pages/          # Page components
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ services/       # API services
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ types/          # TypeScript types
‚îÇ   ‚îî‚îÄ‚îÄ package.json
‚îî‚îÄ‚îÄ README.md
```

## üß™ –¢–µ—Å—Ç –∞–∂–∏–ª–ª—É—É–ª–∞—Ö

```bash
# Backend —Ç–µ—Å—Ç
cd backend && ./mvnw test

# Frontend —Ç–µ—Å—Ç
cd frontend && npm test
```

## üìö Documentation

- [API Documentation](docs/API.md)
- [User Guide](docs/USER_GUIDE.md)
- [Development Guide](docs/DEVELOPMENT.md)

## ü§ù Contributing

1. Fork repository
2. Create feature branch
3. Make changes with tests
4. Submit pull request

## üìù License

MIT License - see [LICENSE](LICENSE) file for details.

---

**üéâ LOS —Å–∏—Å—Ç–µ–º–¥ —Ç–∞–≤—Ç–∞–π –º–æ—Ä–∏–ª!**
'@

    ".gitignore" = @'
# Compiled class files
*.class

# Log files
*.log

# Maven
target/
!.mvn/wrapper/maven-wrapper.jar
!**/src/main/**/target/
!**/src/test/**/target/

# Node modules
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Build outputs
build/
dist/
*.tgz

# IDE files
.idea/
.vscode/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Environment files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Database files
*.db
*.sqlite

# Temporary files
*.tmp
*.temp

# Coverage reports
coverage/
*.lcov

# Logs
logs/
*.log

# Runtime data
pids/
*.pid
*.seed

# Application specific
uploads/
documents/
session-store.db
'@
}

Clear-Host

Write-ColoredText "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê" "Cyan"
Write-ColoredText "üõ†Ô∏è LOS –î–£–¢–£–£ –§–ê–ô–õ–£–£–î “Æ“Æ–°–ì–≠–ì–ß - TEMPLATE GENERATOR" "Yellow"
Write-ColoredText "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê" "Cyan"
Write-ColoredText "üìÖ –û–≥–Ω–æ–æ: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')" "White"
Write-ColoredText "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê" "Cyan"
Write-ColoredText ""

Write-Log "File creation started"

# –î–∞—Ä–∞–∞–ª–∞–ª —Ç–æ–¥–æ—Ä—Ö–æ–π–ª–æ—Ö
$creationOrder = @(
    # –°—É—É—Ä—å –¥–∏—Ä–µ–∫—Ç–æ—Ä—É—É–¥
    "backend",
    "backend/src",
    "backend/src/main",
    "backend/src/main/java",
    "backend/src/main/java/com",
    "backend/src/main/java/com/los",
    "backend/src/main/resources",
    "backend/src/test",
    "backend/src/test/java",
    "frontend",
    "frontend/src",
    "docs",
    "scripts",
    
    # –°—É—É—Ä—å —Ñ–∞–π–ª—É—É–¥
    "backend/pom.xml",
    ".gitignore",
    "README.md",
    
    # Java –ø–∞–∫–µ–∂“Ø“Ø–¥
    "backend/src/main/java/com/los/common",
    "backend/src/main/java/com/los/entity",
    "backend/src/main/java/com/los/repository",
    "backend/src/main/java/com/los/service",
    "backend/src/main/java/com/los/controller",
    "backend/src/main/java/com/los/config",
    
    # Application —Ñ–∞–π–ª—É—É–¥
    "backend/src/main/java/com/los/LosApplication.java",
    "backend/src/main/java/com/los/common/BaseEntity.java",
    "backend/src/main/java/com/los/entity/Customer.java",
    "backend/src/main/resources/application.yml",
    "backend/src/main/resources/data.sql",
    
    # Frontend —Å—É—É—Ä—å
    "frontend/package.json",
    "frontend/src/main.tsx",
    "frontend/src/App.tsx"
)

function Create-FileWithTemplate {
    param($FilePath)
    
    # –î–∏—Ä–µ–∫—Ç–æ—Ä “Ø“Ø—Å–≥—ç—Ö
    $dir = Split-Path $FilePath -Parent
    if ($dir -and !(Test-Path $dir)) {
        New-Item -ItemType Directory -Path $dir -Force | Out-Null
        if (!$DryRun) {
            Write-ColoredText "   üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä “Ø“Ø—Å–≥—ç–≤: $dir" "Blue"
        }
    }
    
    # –§–∞–π–ª —à–∞–ª–≥–∞—Ö
    if (Test-Path $FilePath) {
        Write-ColoredText "   ‚ö†Ô∏è  –§–∞–π–ª –∞–ª—å —Ö—ç–¥–∏–π–Ω –±–∞–π–Ω–∞: $FilePath" "Yellow"
        return $false
    }
    
    # Template –∞–≤–∞—Ö
    $template = $templates[$FilePath]
    
    if ($DryRun) {
        Write-ColoredText "   [DRY RUN] “Æ“Ø—Å–≥—ç—Ö –±–∞–π—Å–∞–Ω: $FilePath" "Gray"
        return $true
    }
    
    if ($template) {
        # Template –∞—à–∏–≥–ª–∞–Ω “Ø“Ø—Å–≥—ç—Ö
        Set-Content -Path $FilePath -Value $template -Encoding UTF8
        Write-ColoredText "   ‚úÖ Template —Ñ–∞–π–ª “Ø“Ø—Å–≥—ç–≤: $FilePath" "Green"
        Write-Log "Created template file: $FilePath"
    } else {
        # –•–æ–æ—Å–æ–Ω —Ñ–∞–π–ª “Ø“Ø—Å–≥—ç—Ö
        New-Item -ItemType File -Path $FilePath -Force | Out-Null
        Write-ColoredText "   üìÑ –•–æ–æ—Å–æ–Ω —Ñ–∞–π–ª “Ø“Ø—Å–≥—ç–≤: $FilePath" "White"
        Write-Log "Created empty file: $FilePath"
    }
    
    return $true
}

# –ê–Ω—Ö–Ω—ã —à–∞–ª–≥–∞–ª—Ç
if ($DryRun) {
    Write-ColoredText "üîç DRY RUN MODE - –§–∞–π–ª—É—É–¥ “Ø“Ø—Å–≥—ç—Ö–≥“Ø–π, –∑”©–≤—Ö”©–Ω —Ö–∞—Ä—É—É–ª–Ω–∞" "Yellow"
    Write-ColoredText ""
}

$createdCount = 0
$skippedCount = 0

# –î–æ–ª–æ–æ —Ö–æ–Ω–æ–≥ —Å–æ–Ω–≥–æ—Å–æ–Ω —ç—Å—ç—Ö —à–∞–ª–≥–∞—Ö
if ($Week) {
    Write-ColoredText "üìÖ $Week –¥–æ–ª–æ–æ —Ö–æ–Ω–æ–≥–∏–π–Ω —Ñ–∞–π–ª—É—É–¥—ã–≥ “Ø“Ø—Å–≥—ç–∂ –±–∞–π–Ω–∞..." "Blue"
    Write-ColoredText ""
    
    # TODO: Week-–∏–π–Ω —Ñ–∞–π–ª—É—É–¥—ã–≥ “Ø“Ø—Å–≥—ç—Ö –∫–æ–¥
} elseif ($CreateAll) {
    Write-ColoredText "üìã –ë“Æ–• –î–£–¢–£–£ –§–ê–ô–õ–£–£–î–´–ì “Æ“Æ–°–ì–≠–ñ –ë–ê–ô–ù–ê..." "Blue"
    Write-ColoredText ""
    
    # –î–∞—Ä–∞–∞–ª–∞–ª–¥ –Ω—å “Ø“Ø—Å–≥—ç—Ö
    foreach ($item in $creationOrder) {
        if ($item -like "*.*") {
            # –§–∞–π–ª
            if (Create-FileWithTemplate $item) {
                $createdCount++
            } else {
                $skippedCount++
            }
        } else {
            # –î–∏—Ä–µ–∫—Ç–æ—Ä
            if (!(Test-Path $item)) {
                if (!$DryRun) {
                    New-Item -ItemType Directory -Path $item -Force | Out-Null
                    Write-ColoredText "   üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä “Ø“Ø—Å–≥—ç–≤: $item" "Blue"
                } else {
                    Write-ColoredText "   [DRY RUN] –î–∏—Ä–µ–∫—Ç–æ—Ä “Ø“Ø—Å–≥—ç—Ö –±–∞–π—Å–∞–Ω: $item" "Gray"
                }
            }
        }
    }
    
    Write-ColoredText ""
    Write-ColoredText "üéØ –î–ê–†–ê–ê–ì–ò–ô–ù –ê–õ–•–ú–£–£–î:" "Green"
    Write-ColoredText "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê" "Green"
    Write-ColoredText "   1. Backend entity —Ñ–∞–π–ª—É—É–¥—ã–≥ (User.java, Role.java) –≥“Ø–π—Ü—ç—ç—Ö" "White"
    Write-ColoredText "   2. Repository –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å“Ø“Ø–¥—ã–≥ “Ø“Ø—Å–≥—ç—Ö" "White"
    Write-ColoredText "   3. Service –∫–ª–∞—Å—Å—É—É–¥—ã–≥ implement —Ö–∏–π—Ö" "White"
    Write-ColoredText "   4. Controller —Ñ–∞–π–ª—É—É–¥—ã–≥ “Ø“Ø—Å–≥—ç—Ö" "White"
    Write-ColoredText "   5. Frontend –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—É—É–¥—ã–≥ “Ø“Ø—Å–≥—ç—Ö" "White"
    
} else {
    Write-ColoredText "üí° –§–ê–ô–õ “Æ“Æ–°–ì–≠–• –ö–û–ú–ê–ù–î–£–£–î:" "Blue"
    Write-ColoredText "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê" "Blue"
    Write-ColoredText "   –ë“Ø—Ö —Ñ–∞–π–ª “Ø“Ø—Å–≥—ç—Ö:        .\LOS-Missing-Files-Creator.ps1 -CreateAll" "White"
    Write-ColoredText "   Dry run —Ç–µ—Å—Ç:           .\LOS-Missing-Files-Creator.ps1 -CreateAll -DryRun" "White"
    Write-ColoredText "   1-—Ä –¥–æ–ª–æ–æ —Ö–æ–Ω–æ–≥:        .\LOS-Missing-Files-Creator.ps1 -Week 1" "White"
    Write-ColoredText ""
    Write-ColoredText "üìã –û–î–û–û–ì–ò–ô–ù TEMPLATES:" "Green"
    Write-ColoredText "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê" "Green"
    
    foreach ($template in $templates.Keys) {
        if (Test-Path $template) {
            Write-ColoredText "   ‚úÖ $template" "Green"
        } else {
            Write-ColoredText "   ‚ùå $template" "Red"
        }
    }
}

Write-ColoredText ""
Write-ColoredText "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê" "Cyan"
Write-ColoredText "üìä “Æ“Æ–°–ì–≠–• –°–¢–ê–¢–ò–°–¢–ò–ö:" "White"
Write-ColoredText "   ‚úÖ “Æ“Ø—Å–≥—ç—Å—ç–Ω —Ñ–∞–π–ª:       $createdCount" "Green"
Write-ColoredText "   ‚ö†Ô∏è  –ê–ª–≥–∞—Å—Å–∞–Ω —Ñ–∞–π–ª:       $skippedCount" "Yellow"
Write-ColoredText "   üìã Template –±–∞–π–≥–∞–∞:     $($templates.Count)" "Blue"
Write-ColoredText "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê" "Cyan"

if ($LogFile) {
    Write-ColoredText "üìã –õ–æ–≥ —Ñ–∞–π–ª: $LogFile" "Gray"
}

Write-Log "File creation completed. Created: $createdCount, Skipped: $skippedCount"

Write-ColoredText ""
Write-ColoredText "üöÄ –î–∞—Ä–∞–∞–≥–∏–π–Ω –∞–ª—Ö–∞–º: Backend —ç—Ö–ª“Ø“Ø–ª—ç—Ö: cd backend && .\mvnw.cmd spring-boot:run" "Yellow"
Write-ColoredText ""