# Production Environment Configuration for LOS
# This configuration is optimized for production deployment

server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /los
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false
  compression:
    enabled: true
    mime-types: 
      - application/json
      - application/xml
      - text/html
      - text/xml
      - text/plain
    min-response-size: 1024
  http2:
    enabled: true
  ssl:
    enabled: ${SSL_ENABLED:false}
    key-store: ${SSL_KEYSTORE_PATH:}
    key-store-password: ${SSL_KEYSTORE_PASSWORD:}
    key-alias: ${SSL_KEY_ALIAS:}

spring:
  profiles:
    active: prod
    
  # Database Configuration - PostgreSQL for production
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/los_prod}
    username: ${DATABASE_USERNAME:los_user}
    password: ${DATABASE_PASSWORD}
    driverClassName: org.postgresql.Driver
    hikari:
      maximum-pool-size: ${DB_POOL_SIZE:20}
      minimum-idle: ${DB_POOL_MIN_IDLE:5}
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
      connection-test-query: SELECT 1
      
  # JPA/Hibernate Configuration
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: false
    properties:
      hibernate:
        jdbc:
          batch_size: 50
        order_inserts: true
        order_updates: true
        cache:
          use_second_level_cache: true
          use_query_cache: true
          region:
            factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
        
  # H2 Console (disabled for production)
  h2:
    console:
      enabled: false
      
  # Redis Configuration
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    database: ${REDIS_DATABASE:0}
    timeout: 5000ms
    ssl: ${REDIS_SSL:false}
    lettuce:
      pool:
        max-active: 20
        max-idle: 10
        min-idle: 2
        time-between-eviction-runs: 30s
        
  # Cache Configuration
  cache:
    type: redis
    redis:
      time-to-live: 3600000 # 1 hour
      key-prefix: "los:cache:"
      use-key-prefix: true
    cache-names:
      - customers
      - loanProducts
      - documents
      - userPermissions
      - systemConfig
      
  # Jackson Configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
      indent-output: false
    deserialization:
      fail-on-unknown-properties: false
    default-property-inclusion: non_null
    
  # File Upload Configuration
  servlet:
    multipart:
      enabled: true
      max-file-size: ${MAX_FILE_SIZE:20MB}
      max-request-size: ${MAX_REQUEST_SIZE:20MB}
      file-size-threshold: 2KB
      
  # Security Configuration
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:}
          
  # Mail Configuration
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:}
    password: ${MAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          connectiontimeout: 10000
          timeout: 10000
          writetimeout: 10000

# Application Specific Configuration
app:
  name: "LOS Production"
  version: "@project.version@"
  description: "Loan Origination System - Production Environment"
  
  # JWT Configuration
  jwt:
    enabled: true
    secret: ${JWT_SECRET}
    expiration: ${JWT_EXPIRATION:3600} # 1 hour in seconds
    refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800} # 7 days in seconds
    
  # File Storage Configuration
  file:
    upload-dir: ${FILE_UPLOAD_DIR:/opt/los/uploads}
    max-size: ${FILE_MAX_SIZE:20971520} # 20MB
    allowed-types:
      - pdf
      - jpg
      - jpeg
      - png
      - doc
      - docx
      
  # Loan Configuration
  loan:
    default-interest-rate: ${LOAN_DEFAULT_RATE:12.0}
    max-loan-amount: ${LOAN_MAX_AMOUNT:500000000} # 500M MNT
    min-loan-amount: ${LOAN_MIN_AMOUNT:1000000}   # 1M MNT
    max-loan-term: ${LOAN_MAX_TERM:360}           # 30 years
    min-loan-term: ${LOAN_MIN_TERM:6}             # 6 months
    
  # Customer Configuration
  customer:
    auto-kyc: ${CUSTOMER_AUTO_KYC:true}
    welcome-email: ${CUSTOMER_WELCOME_EMAIL:true}
    
  # Notification Configuration
  notification:
    email:
      enabled: ${NOTIFICATION_EMAIL_ENABLED:true}
      from: ${NOTIFICATION_EMAIL_FROM:noreply@los.company.com}
      reply-to: ${NOTIFICATION_EMAIL_REPLY_TO:support@los.company.com}
    sms:
      enabled: ${NOTIFICATION_SMS_ENABLED:true}
      provider: ${SMS_PROVIDER:}
      api-key: ${SMS_API_KEY:}
    push:
      enabled: ${NOTIFICATION_PUSH_ENABLED:false}
      
  # External Services Configuration
  external:
    credit-bureau:
      enabled: ${CREDIT_BUREAU_ENABLED:true}
      url: ${CREDIT_BUREAU_URL}
      api-key: ${CREDIT_BUREAU_API_KEY}
      timeout: ${CREDIT_BUREAU_TIMEOUT:30000}
    payment-gateway:
      enabled: ${PAYMENT_GATEWAY_ENABLED:true}
      url: ${PAYMENT_GATEWAY_URL}
      api-key: ${PAYMENT_GATEWAY_API_KEY}
      timeout: ${PAYMENT_GATEWAY_TIMEOUT:30000}
    document-verification:
      enabled: ${DOCUMENT_VERIFICATION_ENABLED:true}
      url: ${DOCUMENT_VERIFICATION_URL}
      api-key: ${DOCUMENT_VERIFICATION_API_KEY}
      timeout: ${DOCUMENT_VERIFICATION_TIMEOUT:30000}
      
  # Security Configuration
  security:
    rate-limiting:
      enabled: true
      requests-per-minute: 60
      burst-capacity: 100
    ip-whitelist:
      enabled: ${IP_WHITELIST_ENABLED:false}
      allowed-ips: ${ALLOWED_IPS:}
    cors:
      enabled: true
      allowed-origins: ${CORS_ALLOWED_ORIGINS:https://los.company.com}
      
  # Monitoring Configuration
  monitoring:
    metrics:
      enabled: true
      export:
        prometheus:
          enabled: ${PROMETHEUS_ENABLED:true}
    tracing:
      enabled: ${TRACING_ENABLED:false}
      zipkin:
        base-url: ${ZIPKIN_URL:http://zipkin:9411}
        
# Logging Configuration
logging:
  level:
    com.company.los: ${LOG_LEVEL_APP:INFO}
    org.springframework.security: ${LOG_LEVEL_SECURITY:WARN}
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    root: ${LOG_LEVEL_ROOT:WARN}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE_PATH:/var/log/los/application.log}
    max-size: ${LOG_FILE_MAX_SIZE:100MB}
    max-history: ${LOG_FILE_MAX_HISTORY:30}
    total-size-cap: ${LOG_TOTAL_SIZE_CAP:1GB}
  logback:
    rollingpolicy:
      clean-history-on-start: true
      
# Management/Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: ${ACTUATOR_ENDPOINTS:health,info,metrics,prometheus}
      base-path: /actuator
  endpoint:
    health:
      show-details: ${ACTUATOR_HEALTH_DETAILS:when-authorized}
      probes:
        enabled: true
    info:
      enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: ${PROMETHEUS_ENABLED:true}
  health:
    redis:
      enabled: true
    db:
      enabled: true
    diskspace:
      enabled: true
      threshold: ${HEALTH_DISK_THRESHOLD:1GB}
  info:
    env:
      enabled: false
    build:
      enabled: true
    git:
      enabled: true
      mode: simple
  metrics:
    export:
      prometheus:
        enabled: ${PROMETHEUS_ENABLED:true}
    distribution:
      percentiles-histogram:
        http.server.requests: true
      sla:
        http.server.requests: 50ms,100ms,200ms,500ms,1s
        
# Security Headers
security:
  headers:
    frame-options: DENY
    content-type-options: nosniff
    xss-protection: "1; mode=block"
    referrer-policy: strict-origin-when-cross-origin
    permissions-policy: "camera=(), microphone=(), geolocation=()"
    
# Database Migration
flyway:
  enabled: ${FLYWAY_ENABLED:true}
  locations: classpath:db/migration
  baseline-on-migrate: true
  validate-on-migrate: true
  
# Connection Pool Monitoring
spring.datasource.hikari:
  register-mbeans: true
  
# Thread Pool Configuration
spring.task:
  execution:
    pool:
      core-size: 8
      max-size: 20
      queue-capacity: 100
      keep-alive: 60s
    thread-name-prefix: los-task-
  scheduling:
    pool:
      size: 5
    thread-name-prefix: los-scheduled-