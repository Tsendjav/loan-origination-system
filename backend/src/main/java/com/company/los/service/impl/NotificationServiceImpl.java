package com.company.los.service.impl;

import com.company.los.entity.Customer;
import com.company.los.entity.LoanApplication;
import com.company.los.service.NotificationService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

import java.util.List;

/**
 * Implementation of NotificationService
 * ‚≠ê –ó–ê–°–í–ê–†–õ–ê–°–ê–ù - log variable –∞–ª–¥–∞–∞ —à–∏–π–¥—ç–≥–¥—Å—ç–Ω ‚≠ê
 * 
 * @author LOS Development Team
 * @version 1.1 - Log variable –∞–ª–¥–∞–∞ –∑–∞—Å–≤–∞—Ä–ª–∞–≥–¥—Å–∞–Ω
 * @since 2025-01-01
 */
@Service
public class NotificationServiceImpl implements NotificationService {
    
    private static final Logger log = LoggerFactory.getLogger(NotificationServiceImpl.class);
    
    @Value("${app.notification.email.enabled:false}")
    private boolean emailEnabled;
    
    @Value("${app.notification.sms.enabled:false}")
    private boolean smsEnabled;
    
    @Override
    public void sendApplicationCreatedNotification(LoanApplication application) {
        log.info("–ó—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç “Ø“Ø—Å–≥—ç–≥–¥—Å—ç–Ω —Ç–∞–ª–∞–∞—Ä –º—ç–¥—ç–≥–¥—ç–ª –∏–ª–≥—ç—ç–∂ –±–∞–π–Ω–∞: {}", application.getApplicationNumber());
        
        if (emailEnabled) {
            sendEmailNotification(
                application.getCustomer().getEmail(),
                "–ó—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç “Ø“Ø—Å–≥—ç–≥–¥–ª—ç—ç",
                String.format("–¢–∞–Ω—ã –∑—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç ‚Ññ%s –∞–º–∂–∏–ª—Ç—Ç–∞–π “Ø“Ø—Å–≥—ç–≥–¥–ª—ç—ç. –•“Ø—Å—ç–ª—Ç–∏–π–Ω –¥“Ø–Ω: %.0f —Ç”©–≥—Ä”©–≥", 
                    application.getApplicationNumber(), 
                    application.getRequestedAmount().doubleValue())
            );
        }
        
        if (smsEnabled) {
            sendSMSNotification(
                application.getCustomer().getPhone(),
                String.format("–ó—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç ‚Ññ%s “Ø“Ø—Å–≥—ç–≥–¥–ª—ç—ç. –î“Ø–Ω: %.0f —Ç”©–≥—Ä”©–≥", 
                    application.getApplicationNumber(), 
                    application.getRequestedAmount().doubleValue())
            );
        }
    }
    
    @Override
    public void sendStatusUpdateNotification(LoanApplication application) {
        log.info("–ó—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç–∏–π–Ω —Å—Ç–∞—Ç—É—Å ”©”©—Ä—á–ª”©–≥–¥—Å”©–Ω —Ç–∞–ª–∞–∞—Ä –º—ç–¥—ç–≥–¥—ç–ª –∏–ª–≥—ç—ç–∂ –±–∞–π–Ω–∞: {} -> {}", 
            application.getApplicationNumber(), application.getStatus());
        
        String statusMessage = getStatusMessage(application.getStatus());
        
        if (emailEnabled) {
            sendEmailNotification(
                application.getCustomer().getEmail(),
                "–ó—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç–∏–π–Ω —Å—Ç–∞—Ç—É—Å ”©”©—Ä—á–ª”©–≥–¥–ª”©”©",
                String.format("–¢–∞–Ω—ã –∑—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç ‚Ññ%s-–∏–π–Ω —Å—Ç–∞—Ç—É—Å: %s", 
                    application.getApplicationNumber(), statusMessage)
            );
        }
        
        if (smsEnabled) {
            sendSMSNotification(
                application.getCustomer().getPhone(),
                String.format("–ó—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç ‚Ññ%s: %s", 
                    application.getApplicationNumber(), statusMessage)
            );
        }
    }
    
    @Override
    public void sendLoanApprovedNotification(LoanApplication application) {
        log.info("–ó—ç—ç–ª –∑”©–≤—à”©”©—Ä”©–≥–¥—Å”©–Ω —Ç–∞–ª–∞–∞—Ä –º—ç–¥—ç–≥–¥—ç–ª –∏–ª–≥—ç—ç–∂ –±–∞–π–Ω–∞: {}", application.getApplicationNumber());
        
        if (emailEnabled) {
            sendEmailNotification(
                application.getCustomer().getEmail(),
                "üéâ –ó—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç –∑”©–≤—à”©”©—Ä”©–≥–¥–ª”©”©!",
                String.format("–ë–∞—è—Ä —Ö“Ø—Ä–≥—ç–µ! –¢–∞–Ω—ã –∑—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç ‚Ññ%s –∑”©–≤—à”©”©—Ä”©–≥–¥–ª”©”©. –ó”©–≤—à”©”©—Ä”©–≥–¥—Å”©–Ω –¥“Ø–Ω: %.0f —Ç”©–≥—Ä”©–≥", 
                    application.getApplicationNumber(), 
                    application.getApprovedAmount() != null ? application.getApprovedAmount().doubleValue() : 0)
            );
        }
        
        if (smsEnabled) {
            sendSMSNotification(
                application.getCustomer().getPhone(),
                String.format("–ó—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç ‚Ññ%s –∑”©–≤—à”©”©—Ä”©–≥–¥–ª”©”©! –î“Ø–Ω: %.0f —Ç”©–≥—Ä”©–≥", 
                    application.getApplicationNumber(), 
                    application.getApprovedAmount() != null ? application.getApprovedAmount().doubleValue() : 0)
            );
        }
    }
    
    @Override
    public void sendLoanRejectedNotification(LoanApplication application) {
        log.info("–ó—ç—ç–ª —Ç–∞—Ç–≥–∞–ª–∑—Å–∞–Ω —Ç–∞–ª–∞–∞—Ä –º—ç–¥—ç–≥–¥—ç–ª –∏–ª–≥—ç—ç–∂ –±–∞–π–Ω–∞: {}", application.getApplicationNumber());
        
        if (emailEnabled) {
            sendEmailNotification(
                application.getCustomer().getEmail(),
                "–ó—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç —Ç–∞—Ç–≥–∞–ª–∑–∞–≥–¥–ª–∞–∞",
                String.format("–£—É—á–ª–∞–∞—Ä–∞–π, —Ç–∞–Ω—ã –∑—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç ‚Ññ%s —Ç–∞—Ç–≥–∞–ª–∑–∞–≥–¥–ª–∞–∞. –î—ç–ª–≥—ç—Ä—ç–Ω–≥“Ø–π –º—ç–¥—ç—ç–ª–ª–∏–π–≥ –º–∞–Ω–∞–π —Ç”©–≤”©”©—Å –∞–≤–Ω–∞ —É—É.", 
                    application.getApplicationNumber())
            );
        }
        
        if (smsEnabled) {
            sendSMSNotification(
                application.getCustomer().getPhone(),
                String.format("–ó—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç ‚Ññ%s —Ç–∞—Ç–≥–∞–ª–∑–∞–≥–¥–ª–∞–∞. –î—ç–ª–≥—ç—Ä—ç–Ω–≥“Ø–π –º—ç–¥—ç—ç–ª—ç–ª: +976-1234-5678", 
                    application.getApplicationNumber())
            );
        }
    }
    
    @Override
    public void sendDocumentsRequiredNotification(LoanApplication application, List<String> requiredDocuments) {
        log.info("–ù—ç–º—ç–ª—Ç –±–∞—Ä–∏–º—Ç —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π —Ç–∞–ª–∞–∞—Ä –º—ç–¥—ç–≥–¥—ç–ª –∏–ª–≥—ç—ç–∂ –±–∞–π–Ω–∞: {}", application.getApplicationNumber());
        
        String documentsStr = String.join(", ", requiredDocuments);
        
        if (emailEnabled) {
            sendEmailNotification(
                application.getCustomer().getEmail(),
                "–ù—ç–º—ç–ª—Ç –±–∞—Ä–∏–º—Ç –±–∏—á–∏–≥ —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π",
                String.format("–¢–∞–Ω—ã –∑—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç ‚Ññ%s-–¥ –¥–∞—Ä–∞–∞—Ö –±–∞—Ä–∏–º—Ç –±–∏—á–∏–≥ —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π: %s", 
                    application.getApplicationNumber(), documentsStr)
            );
        }
        
        if (smsEnabled) {
            sendSMSNotification(
                application.getCustomer().getPhone(),
                String.format("–ó—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç ‚Ññ%s-–¥ –Ω—ç–º—ç–ª—Ç –±–∞—Ä–∏–º—Ç —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π", 
                    application.getApplicationNumber())
            );
        }
    }
    
    @Override
    public void sendLoanDisbursedNotification(LoanApplication application) {
        log.info("–ó—ç—ç–ª –æ–ª–≥–æ–≥–¥—Å–æ–Ω —Ç–∞–ª–∞–∞—Ä –º—ç–¥—ç–≥–¥—ç–ª –∏–ª–≥—ç—ç–∂ –±–∞–π–Ω–∞: {}", application.getApplicationNumber());
        
        if (emailEnabled) {
            sendEmailNotification(
                application.getCustomer().getEmail(),
                "üí∞ –ó—ç—ç–ª –∞–º–∂–∏–ª—Ç—Ç–∞–π –æ–ª–≥–æ–≥–¥–ª–æ–æ!",
                String.format("–¢–∞–Ω—ã –∑—ç—ç–ª ‚Ññ%s –∞–º–∂–∏–ª—Ç—Ç–∞–π –æ–ª–≥–æ–≥–¥–ª–æ–æ. –î“Ø–Ω: %.0f —Ç”©–≥—Ä”©–≥", 
                    application.getApplicationNumber(), 
                    application.getApprovedAmount() != null ? application.getApprovedAmount().doubleValue() : 0)
            );
        }
        
        if (smsEnabled) {
            sendSMSNotification(
                application.getCustomer().getPhone(),
                String.format("–ó—ç—ç–ª ‚Ññ%s –æ–ª–≥–æ–≥–¥–ª–æ–æ! –î“Ø–Ω: %.0f —Ç”©–≥—Ä”©–≥", 
                    application.getApplicationNumber(), 
                    application.getApprovedAmount() != null ? application.getApprovedAmount().doubleValue() : 0)
            );
        }
    }
    
    @Override
    public void sendWelcomeNotification(Customer customer) {
        log.info("–®–∏–Ω—ç —Ö–∞—Ä–∏–ª—Ü–∞–≥—á–∏–¥ —Ç–∞–≤—Ç–∞–π –º–æ—Ä–∏–ª –º—ç–¥—ç–≥–¥—ç–ª –∏–ª–≥—ç—ç–∂ –±–∞–π–Ω–∞: {}", customer.getEmail());
        
        if (emailEnabled) {
            sendEmailNotification(
                customer.getEmail(),
                "üè¶ Loan Origination System-–¥ —Ç–∞–≤—Ç–∞–π –º–æ—Ä–∏–ª–Ω–æ —É—É!",
                String.format("–°–∞–π–Ω –±–∞–π–Ω–∞ —É—É %s %s! –ú–∞–Ω–∞–π –∑—ç—ç–ª–∏–π–Ω —Å–∏—Å—Ç–µ–º–¥ —Ç–∞–≤—Ç–∞–π –º–æ—Ä–∏–ª–Ω–æ —É—É. –¢–∞ –∑—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç –≥–∞—Ä–≥–∞–∂ —ç—Ö–ª—ç—Ö –±–æ–ª–æ–º–∂—Ç–æ–π.", 
                    customer.getFirstName(), customer.getLastName())
            );
        }
        
        if (smsEnabled) {
            sendSMSNotification(
                customer.getPhone(),
                String.format("–°–∞–π–Ω –±–∞–π–Ω–∞ —É—É %s! LOS —Å–∏—Å—Ç–µ–º–¥ —Ç–∞–≤—Ç–∞–π –º–æ—Ä–∏–ª–Ω–æ —É—É!", 
                    customer.getFirstName())
            );
        }
    }
    
    @Override
    public void sendKYCCompletedNotification(Customer customer) {
        log.info("KYC –¥—É—É—Å—Å–∞–Ω —Ç–∞–ª–∞–∞—Ä –º—ç–¥—ç–≥–¥—ç–ª –∏–ª–≥—ç—ç–∂ –±–∞–π–Ω–∞: {}", customer.getEmail());
        
        if (emailEnabled) {
            sendEmailNotification(
                customer.getEmail(),
                "‚úÖ KYC –ø—Ä–æ—Ü–µ—Å—Å –∞–º–∂–∏–ª—Ç—Ç–∞–π –¥—É—É—Å–ª–∞–∞",
                String.format("–°–∞–π–Ω –±–∞–π–Ω–∞ —É—É %s %s! –¢–∞–Ω—ã —Ç–∞–Ω–∏–Ω –º—ç–¥—ç—Ö (KYC) –ø—Ä–æ—Ü–µ—Å—Å –∞–º–∂–∏–ª—Ç—Ç–∞–π –¥—É—É—Å—á, —Ç–∞ –∑—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç –≥–∞—Ä–≥–∞—Ö –±–æ–ª–æ–º–∂—Ç–æ–π –±–æ–ª–ª–æ–æ.", 
                    customer.getFirstName(), customer.getLastName())
            );
        }
        
        if (smsEnabled) {
            sendSMSNotification(
                customer.getPhone(),
                "KYC –ø—Ä–æ—Ü–µ—Å—Å –¥—É—É—Å–ª–∞–∞. –¢–∞ –∑—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç –≥–∞—Ä–≥–∞—Ö –±–æ–ª–æ–º–∂—Ç–æ–π –±–æ–ª–ª–æ–æ."
            );
        }
    }
    
    @Override
    public void sendPaymentReminderNotification(LoanApplication application, int daysOverdue) {
        log.info("–¢”©–ª–±”©—Ä–∏–π–Ω —Å–∞–Ω—É—É–ª–≥–∞ –∏–ª–≥—ç—ç–∂ –±–∞–π–Ω–∞: {} - {} ”©–¥”©—Ä —Ö–æ—Ü–æ—Ä—Å–æ–Ω", 
            application.getApplicationNumber(), daysOverdue);
        
        String message = daysOverdue > 0 
            ? String.format("–¢–∞–Ω—ã –∑—ç—ç–ª–∏–π–Ω —Ç”©–ª–±”©—Ä %d ”©–¥”©—Ä —Ö–æ—Ü–æ—Ä—Å–æ–Ω –±–∞–π–Ω–∞", daysOverdue)
            : "–¢–∞–Ω—ã –∑—ç—ç–ª–∏–π–Ω —Ç”©–ª–±”©—Ä–∏–π–Ω —Ö—É–≥–∞—Ü–∞–∞ –æ–π—Ä—Ç–æ–∂ –±–∞–π–Ω–∞";
        
        if (emailEnabled) {
            sendEmailNotification(
                application.getCustomer().getEmail(),
                "‚ö†Ô∏è –ó—ç—ç–ª–∏–π–Ω —Ç”©–ª–±”©—Ä–∏–π–Ω —Å–∞–Ω—É—É–ª–≥–∞",
                String.format("–ó—ç—ç–ª ‚Ññ%s: %s. –¢”©–ª–±”©—Ä”©”© —Ö—É–≥–∞—Ü–∞–∞–Ω–¥–∞–∞ —Ç”©–ª–Ω”© “Ø“Ø.", 
                    application.getApplicationNumber(), message)
            );
        }
        
        if (smsEnabled) {
            sendSMSNotification(
                application.getCustomer().getPhone(),
                String.format("–ó—ç—ç–ª ‚Ññ%s: %s", application.getApplicationNumber(), message)
            );
        }
    }
    
    // Helper methods
    private void sendEmailNotification(String to, String subject, String body) {
        // TODO: Implement actual email sending logic
        log.info("üìß EMAIL –∏–ª–≥—ç—ç–ª—ç—ç: {} -> {}", to, subject);
        // Here you would integrate with actual email service (SMTP, SendGrid, etc.)
    }
    
    private void sendSMSNotification(String phoneNumber, String message) {
        // TODO: Implement actual SMS sending logic
        log.info("üì± SMS –∏–ª–≥—ç—ç–ª—ç—ç: {} -> {}", phoneNumber, message);
        // Here you would integrate with actual SMS service (Twilio, etc.)
    }
    
    private String getStatusMessage(LoanApplication.ApplicationStatus status) {
        if (status == null) return "–¢–æ–¥–æ—Ä—Ö–æ–π–≥“Ø–π —Å—Ç–∞—Ç—É—Å";
        
        return switch (status) {
            case DRAFT -> "–ù–æ–æ—Ä–æ–≥";
            case SUBMITTED -> "–ò–ª–≥—ç—ç—Å—ç–Ω";
            case PENDING -> "–•“Ø–ª—ç—ç–≥–¥—ç–∂ –±–∞–π–Ω–∞";
            case UNDER_REVIEW -> "–®–∞–ª–≥–∞–≥–¥–∞–∂ –±–∞–π–Ω–∞";
            case PENDING_DOCUMENTS -> "–ë–∞—Ä–∏–º—Ç —Ö“Ø–ª—ç—ç–∂ –±–∞–π–Ω–∞";
            case APPROVED -> "–ó”©–≤—à”©”©—Ä”©–≥–¥—Å”©–Ω";
            case REJECTED -> "–¢–∞—Ç–≥–∞–ª–∑—Å–∞–Ω";
            case DISBURSED -> "–û–ª–≥–æ–≥–¥—Å–æ–Ω";
            case CANCELLED -> "–¶—É—Ü–ª–∞–≥–¥—Å–∞–Ω";
            default -> "–¢–æ–¥–æ—Ä—Ö–æ–π–≥“Ø–π —Å—Ç–∞—Ç—É—Å";
        };
    }
}