import React, { useEffect, useState } from 'react';
import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';
import { ConfigProvider, Card, Row, Col, Statistic, Alert, Layout, Menu, Typography, Space, Button } from 'antd';
import { 
  CheckCircleOutlined, 
  ClockCircleOutlined, 
  FileTextOutlined, 
  UserOutlined,
  DashboardOutlined,
  ReloadOutlined 
} from '@ant-design/icons';
import './App.css';

const { Header, Content, Footer } = Layout;
const { Title } = Typography;

const antdTheme = {
  token: {
    colorPrimary: '#1890ff',
    colorSuccess: '#52c41a',
    colorWarning: '#faad14',
    colorError: '#ff4d4f',
    borderRadius: 6,
  },
};

interface BackendStatus {
  status: string;
  service: string;
  version: string;
  timestamp: string;
}

function App() {
  const [backendStatus, setBackendStatus] = useState<BackendStatus | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  const fetchSystemStatus = async () => {
    try {
      setLoading(true);
      setError(null);
      const response = await fetch('/los/api/v1/health');
      
      if (!response.ok) {
        throw new Error(`HTTP ${response.status}: ${response.statusText}`);
      }
      
      const data = await response.json();
      setBackendStatus(data);
    } catch (err) {
      console.error('Backend —Ö–∞–Ω–¥–∞–ª—Ç –∞–º–∂–∏–ª—Ç–≥“Ø–π:', err);
      setError(err instanceof Error ? err.message : '–ê–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞');
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchSystemStatus();
    const interval = setInterval(fetchSystemStatus, 30000); // 30 —Å–µ–∫—É–Ω–¥ —Ç—É—Ç–∞–º —à–∞–ª–≥–∞—Ö
    return () => clearInterval(interval);
  }, []);

  const menuItems = [
    {
      key: 'dashboard',
      icon: <DashboardOutlined />,
      label: '–•—è–Ω–∞–ª—Ç—ã–Ω —Å–∞–º–±–∞—Ä',
    },
    {
      key: 'customers',
      icon: <UserOutlined />,
      label: '–•–∞—Ä–∏–ª—Ü–∞–≥—á–∏–¥',
    },
    {
      key: 'applications',
      icon: <FileTextOutlined />,
      label: '–ó—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç',
    },
  ];

  return (
    <ConfigProvider theme={antdTheme}>
      <Router>
        <Layout style={{ minHeight: '100vh' }}>
          <Header style={{ 
            display: 'flex', 
            alignItems: 'center', 
            background: '#001529' 
          }}>
            <Title level={3} style={{ 
              color: 'white', 
              margin: 0, 
              marginRight: 24 
            }}>
              üè¶ LOS
            </Title>
            <Menu
              theme="dark"
              mode="horizontal"
              defaultSelectedKeys={['dashboard']}
              items={menuItems}
              style={{ flex: 1, minWidth: 0 }}
            />
          </Header>
          
          <Content style={{ padding: '24px', background: '#f0f2f5' }}>
            <div style={{ maxWidth: 1200, margin: '0 auto' }}>
              {/* System Status */}
              <div style={{ marginBottom: 24 }}>
                <Space>
                  <Button 
                    icon={<ReloadOutlined />} 
                    onClick={fetchSystemStatus}
                    loading={loading}
                  >
                    –°—Ç–∞—Ç—É—Å —à–∏–Ω—ç—á–ª—ç—Ö
                  </Button>
                </Space>
              </div>

              {error && (
                <Alert
                  message="–°–∏—Å—Ç–µ–º–∏–π–Ω —Ö–æ–ª–±–æ–ª—Ç—ã–Ω –∞–ª–¥–∞–∞"
                  description={`Backend-—Ç—ç–π —Ö–æ–ª–±–æ–≥–¥–æ–∂ —á–∞–¥—Å–∞–Ω–≥“Ø–π: ${error}`}
                  type="error"
                  showIcon
                  style={{ marginBottom: 24 }}
                  action={
                    <Button size="small" onClick={fetchSystemStatus}>
                      –î–∞—Ö–∏–Ω –æ—Ä–æ–ª–¥–æ—Ö
                    </Button>
                  }
                />
              )}

              {backendStatus && (
                <Alert
                  message={`–°–∏—Å—Ç–µ–º–∏–π–Ω —Å—Ç–∞—Ç—É—Å: ${backendStatus.status}`}
                  description={`${backendStatus.service} v${backendStatus.version} –∞–∂–∏–ª–ª–∞–∂ –±–∞–π–Ω–∞`}
                  type="success"
                  showIcon
                  style={{ marginBottom: 24 }}
                />
              )}

              {/* Dashboard Cards */}
              <Row gutter={[16, 16]} style={{ marginBottom: 24 }}>
                <Col xs={24} sm={12} md={6}>
                  <Card>
                    <Statistic
                      title="–ù–∏–π—Ç —Ö–∞—Ä–∏–ª—Ü–∞–≥—á–∏–¥"
                      value={0}
                      prefix={<UserOutlined />}
                      valueStyle={{ color: '#3f8600' }}
                    />
                  </Card>
                </Col>
                
                <Col xs={24} sm={12} md={6}>
                  <Card>
                    <Statistic
                      title="–ó—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç"
                      value={0}
                      prefix={<FileTextOutlined />}
                      valueStyle={{ color: '#1890ff' }}
                    />
                  </Card>
                </Col>
                
                <Col xs={24} sm={12} md={6}>
                  <Card>
                    <Statistic
                      title="–ó”©–≤—à”©”©—Ä”©–≥–¥—Å”©–Ω"
                      value={0}
                      prefix={<CheckCircleOutlined />}
                      valueStyle={{ color: '#52c41a' }}
                    />
                  </Card>
                </Col>
                
                <Col xs={24} sm={12} md={6}>
                  <Card>
                    <Statistic
                      title="–•“Ø–ª—ç—ç–≥–¥—ç–∂ –±—É–π"
                      value={0}
                      prefix={<ClockCircleOutlined />}
                      valueStyle={{ color: '#faad14' }}
                    />
                  </Card>
                </Col>
              </Row>

              {/* Main Content */}
              <Routes>
                <Route path="/" element={
                  <Card title="–ó—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç–∏–π–Ω —Å–∏—Å—Ç–µ–º–¥ —Ç–∞–≤—Ç–∞–π –º–æ—Ä–∏–ª! üéâ">
                    <div style={{ textAlign: 'left' }}>
                      <h3>‚úÖ –¢”©—Å–ª–∏–π–Ω —Ç–æ—Ö–∏—Ä–≥–æ–æ –∞–º–∂–∏–ª—Ç—Ç–∞–π –¥—É—É—Å–ª–∞–∞!</h3>
                      
                      <h4>üöÄ –î–∞—Ä–∞–∞–≥–∏–π–Ω –∞–ª—Ö–∞–º—É—É–¥:</h4>
                      <ul>
                        <li>Backend API –∞–∂–∏–ª–ª–∞–∂ –±–∞–π–Ω–∞ (–ø–æ—Ä—Ç 8080)</li>
                        <li>Frontend –∞–∂–∏–ª–ª–∞–∂ –±–∞–π–Ω–∞ (–ø–æ—Ä—Ç 3001)</li>
                        <li>Database –±—ç–ª—ç–Ω (H2 in-memory)</li>
                        <li>“Æ–Ω–¥—Å—ç–Ω –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—É—É–¥ “Ø“Ø—Å–≥—ç–≥–¥—Å—ç–Ω</li>
                      </ul>
                      
                      <h4>üîó –•–∞–Ω–¥–∞—Ö —Ö–æ–ª–±–æ–æ—Å—É—É–¥:</h4>
                      <ul>
                        <li><a href="/los/api/v1/health" target="_blank">Backend Health Check</a></li>
                        <li><a href="/los/swagger-ui.html" target="_blank">API Documentation</a></li>
                        <li><a href="/los/h2-console" target="_blank">H2 Database Console</a></li>
                      </ul>

                      <h4>üõ†Ô∏è –•”©–≥–∂“Ø“Ø–ª—ç–ª—Ç—ç–¥ –±—ç–ª—ç–Ω:</h4>
                      <ul>
                        <li>–•–∞—Ä–∏–ª—Ü–∞–≥—á–∏–π–Ω —É–¥–∏—Ä–¥–ª–∞–≥–∞</li>
                        <li>–ó—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç–∏–π–Ω —Å–∏—Å—Ç–µ–ºd</li>
                        <li>–ë–∞—Ä–∏–º—Ç –±–∏—á–≥–∏–π–Ω —É–¥–∏—Ä–¥–ª–∞–≥–∞</li>
                        <li>–ó—ç—ç–ª–∏–π–Ω “Ø–Ω—ç–ª–≥—ç—ç–Ω–∏–π —Å–∏—Å—Ç–µ–º</li>
                      </ul>
                    </div>
                  </Card>
                } />
                <Route path="/customers" element={
                  <Card title="–•–∞—Ä–∏–ª—Ü–∞–≥—á–∏–π–Ω —É–¥–∏—Ä–¥–ª–∞–≥–∞">
                    <p>–•–∞—Ä–∏–ª—Ü–∞–≥—á–∏–π–Ω —É–¥–∏—Ä–¥–ª–∞–≥—ã–Ω —Ö—ç—Å—ç–≥ —É–¥–∞—Ö–≥“Ø–π –Ω—ç–º—ç–≥–¥—ç–Ω—ç...</p>
                  </Card>
                } />
                <Route path="/applications" element={
                  <Card title="–ó—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç">
                    <p>–ó—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç–∏–π–Ω —Ö—ç—Å—ç–≥ —É–¥–∞—Ö–≥“Ø–π –Ω—ç–º—ç–≥–¥—ç–Ω—ç...</p>
                  </Card>
                } />
              </Routes>
            </div>
          </Content>
          
          <Footer style={{ textAlign: 'center', background: '#f0f2f5' }}>
            <Space>
              –ó—ç—ç–ª–∏–π–Ω —Ö“Ø—Å—ç–ª—Ç–∏–π–Ω —Å–∏—Å—Ç–µ–º 2024
              <span>|</span>
              <a href="/los/swagger-ui.html" target="_blank" rel="noopener noreferrer">
                API –±–∞—Ä–∏–º—Ç –±–∏—á–∏–≥
              </a>
              <span>|</span>
              <a href="/los/h2-console" target="_blank" rel="noopener noreferrer">
                ”®–≥”©–≥–¥–ª–∏–π–Ω —Å–∞–Ω
              </a>
            </Space>
          </Footer>
        </Layout>
      </Router>
    </ConfigProvider>
  );
}

export default App;
