<#
.SYNOPSIS
    –§–∞–π–ª –±–æ–ª–æ–Ω –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏ —Ç–æ–æ–ª—É—É—Ä —Å–∫—Ä–∏–ø—Ç
.DESCRIPTION
    –¢—É—Ö–∞–π–Ω —Ñ–æ–ª–¥–µ—Ä –±–æ–ª–æ–Ω –¥—ç–¥ —Ñ–æ–ª–¥–µ—Ä—É—É–¥—ã–Ω —Ñ–∞–π–ª—É—É–¥—ã–≥ —Ç–æ–æ–ª–∂, –¥—ç–ª–≥—ç—Ä—ç–Ω–≥“Ø–π –º—ç–¥—ç—ç–ª—ç–ª —Ö–∞—Ä—É—É–ª–Ω–∞
#>

function Write-ColoredText {
    param([string]$text, [string]$color)
    Write-Host $text -ForegroundColor $color
}

function Show-FileSystemTree {
    param(
        [string]$rootPath,
        [int]$depth = 0,
        [int]$maxDepth = 3
    )
    
    $indent = '    ' * $depth
    $dirName = Split-Path $rootPath -Leaf
    
    if ($depth -eq 0) {
        Write-ColoredText "`nüå≥ –§–æ–ª–¥–µ—Ä –±“Ø—Ç—ç—Ü: $rootPath" "Cyan"
    } else {
        Write-ColoredText "$indentüìÇ $dirName" "DarkCyan"
    }
    
    if ($depth -ge $maxDepth) {
        Write-ColoredText "${indent}    ... (–¥—ç–¥ —Ñ–æ–ª–¥–µ—Ä—É—É–¥—ã–≥ –¥–∞—Ä—Å–∞–Ω)" "DarkGray"
        return
    }
    
    try {
        $dirs = Get-ChildItem -Path $rootPath -Directory -ErrorAction Stop | Sort-Object Name
        $files = Get-ChildItem -Path $rootPath -File -ErrorAction Stop | Sort-Object Name
        
        foreach ($file in $files) {
            $fileIcon = switch -Wildcard ($file.Extension) {
                '.java' { '‚òï' }
                '.ts*' { 'üìú' }
                '.json' { 'üîñ' }
                '.yml' { '‚öôÔ∏è' }
                '.sql' { 'üóÉÔ∏è' }
                '.md' { 'üìù' }
                '.html' { 'üåê' }
                default { 'üìÑ' }
            }
            Write-ColoredText "${indent}    $fileIcon $($file.Name)" "DarkYellow"
        }
        
        foreach ($dir in $dirs) {
            Show-FileSystemTree -rootPath $dir.FullName -depth ($depth + 1) -maxDepth $maxDepth
        }
    }
    catch {
        Write-ColoredText "${indent}    ‚ùå –ê–ª–¥–∞–∞: $($_.Exception.Message)" "Red"
    }
}

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏
$rootFolder = "C:\Projects\loan-origination-system"  # ”®”©—Ä–∏–π–Ω –∑–∞–º–∞–∞—Ä —Å–æ–ª–∏–Ω–æ
$importantDirs = @("src", "main", "java", "resources", "test", "components", "pages", "services", "types", "styles", "db", "processes", "templates")
$importantFiles = @("*.java", "*.tsx", "*.ts", "*.json", "*.yml", "*.yaml", "*.sql", "*.md", "*.bpmn", "*.html", "*.txt", "pom.xml", "package.json", "application.yml", "data.sql", "schema.sql")

# –≠—Ö–ª—ç—Ö
Clear-Host
Write-ColoredText "`nüîç –§–∞–π–ª —Ç–æ–æ–ª—É—É—Ä —ç—Ö–ª—ç–∂ –±–∞–π–Ω–∞..." "Magenta"

try {
    # –ë“Ø—Ö —Ñ–∞–π–ª—ã–≥ —Ü—É–≥–ª—É—É–ª–∞—Ö
    $allFiles = Get-ChildItem -Path $rootFolder -File -Recurse -ErrorAction Stop
    $global:TotalFilesExpected = $allFiles.Count
    
    # –ß—É—Ö–∞–ª —Ñ–∞–π–ª—É—É–¥—ã–≥ —à“Ø“Ø—Ö
    $filteredFiles = Get-ChildItem -Path $rootFolder -Include $importantFiles -Recurse -ErrorAction SilentlyContinue | 
                    Where-Object { $importantDirs -contains $_.Directory.Name }
    $global:TotalFilesFound = $filteredFiles.Count
    
    # –§–æ–ª–¥–µ—Ä –±“Ø—Ç—Ü–∏–π–≥ —Ö–∞—Ä—É—É–ª–∞—Ö
    Show-FileSystemTree -rootPath $rootFolder
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫ –º—ç–¥—ç—ç–ª—ç–ª
    Write-ColoredText "`nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫:" "Cyan"
    Write-ColoredText "   üìÅ –ù–∏–π—Ç —Ñ–æ–ª–¥–µ—Ä: $(@(Get-ChildItem -Path $rootFolder -Directory -Recurse -Force).Count)" "White"
    Write-ColoredText "   üìÑ –ù–∏–π—Ç —Ñ–∞–π–ª: $global:TotalFilesExpected" "White"
    Write-ColoredText "   ‚úÖ –•—ç—Ä—ç–≥—Ç—ç–π —Ñ–∞–π–ª: $global:TotalFilesFound" "Green"
    
    if ($global:TotalFilesExpected -gt 0) {
        $progressPercent = [math]::Round(($global:TotalFilesFound / $global:TotalFilesExpected) * 100, 1)
        Write-ColoredText "   üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: $progressPercent%" "Yellow"
    }
    
    # –§–∞–π–ª—ã–Ω —Ç”©—Ä–ª“Ø“Ø–¥—ç—ç—Ä –∞–Ω–≥–∏–ª—Å–∞–Ω
    Write-ColoredText "`nüì¶ –§–∞–π–ª—ã–Ω —Ç”©—Ä–ª“Ø“Ø–¥:" "Cyan"
    $allFiles | Group-Object Extension | Sort-Object Count -Descending | ForEach-Object {
        $icon = switch ($_.Name) {
            '.java' { '‚òï' }
            '.ts' { 'üìú' }
            '.tsx' { 'üìú' }
            '.json' { 'üîñ' }
            '.yml' { '‚öôÔ∏è' }
            '.yaml' { '‚öôÔ∏è' }
            '.sql' { 'üóÉÔ∏è' }
            '.md' { 'üìù' }
            '.html' { 'üåê' }
            default { 'üìÑ' }
        }
        Write-ColoredText ("   {0} {1}: {2} —Ñ–∞–π–ª ({3:p1})" -f $icon, $_.Name, $_.Count, ($_.Count/$global:TotalFilesExpected)) "White"
    }
}
catch {
    Write-ColoredText "`n‚ùå –ê–ª–¥–∞–∞: $($_.Exception.Message)" "Red"
}

Write-ColoredText "`n‚úÖ –§–∞–π–ª —Ç–æ–æ–ª—É—É—Ä –∞–∂–∏–ª–ª–∞–≤" "Green"